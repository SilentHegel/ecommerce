{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialSate = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialSate, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/kevingarcia/Desktop/ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","configureStore","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","reducer","productList","productDetails","cart","userLogin","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialSate","cartItems","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,kBAAR,EAA2BC,qBAA3B,QAAuD,4BAAvD;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;AAGA,MAAMC,OAAO,GAAGT,eAAe,CAAC;AAC5BU,EAAAA,WAAW,EAAEL,kBADe;AAE5BM,EAAAA,cAAc,EAAEL,qBAFY;AAG5BM,EAAAA,IAAI,EAAEL,WAHsB;AAI5BM,EAAAA,SAAS,EAAEL;AAJiB,CAAD,CAA/B;AAQA,MAAMM,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACrBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADqB,GAC2B,EADxD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACpBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADoB,GAC2B,IADvD;AAGA,MAAMI,WAAW,GAAG;AAChBR,EAAAA,IAAI,EAAE;AAACS,IAAAA,SAAS,EAAEP;AAAZ;AADU,CAApB;AAIA,MAAMQ,UAAU,GAAG,CAACnB,KAAD,CAAnB;AAEA,MAAMoB,KAAK,GAAGxB,WAAW,CAACU,OAAD,EAAUW,WAAV,EAAuBhB,mBAAmB,CAACH,eAAe,CAAC,GAAGqB,UAAJ,CAAhB,CAA1C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport {configureStore} from '@reduxjs/toolkit'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {productListReducer,productDetailsReducer} from './reducers/productReducers'\nimport {cartReducer} from './reducers/cartReducers'\nimport {userLoginReducer} from './reducers/userReducers'\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n        JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n        JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialSate = {\n    cart: {cartItems: cartItemsFromStorage}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialSate, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}