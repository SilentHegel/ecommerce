{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialSate = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialSate, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/kevingarcia/Desktop/ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","configureStore","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialSate","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,kBAAR,EAA2BC,qBAA3B,QAAuD,4BAAvD;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,EAA+CC,kBAA/C,QAAwE,yBAAxE;AAGA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC5BY,EAAAA,WAAW,EAAEP,kBADe;AAE5BQ,EAAAA,cAAc,EAAEP,qBAFY;AAG5BQ,EAAAA,IAAI,EAAEP,WAHsB;AAI5BQ,EAAAA,SAAS,EAAEP,gBAJiB;AAK5BQ,EAAAA,YAAY,EAAEP,mBALc;AAM5BQ,EAAAA,WAAW,EAAEP;AANe,CAAD,CAA/B;AAUA,MAAMQ,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACrBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADqB,GAC2B,EADxD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACpBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADoB,GAC2B,IADvD;AAGA,MAAMI,WAAW,GAAG;AAChBV,EAAAA,IAAI,EAAE;AAACW,IAAAA,SAAS,EAAEP;AAAZ,GADU;AAEhBH,EAAAA,SAAS,EAAE;AAACW,IAAAA,QAAQ,EAAEH;AAAX;AAFK,CAApB;AAKA,MAAMI,UAAU,GAAG,CAACxB,KAAD,CAAnB;AAEA,MAAMyB,KAAK,GAAG7B,WAAW,CAACY,OAAD,EAAUa,WAAV,EAAuBpB,mBAAmB,CAACH,eAAe,CAAC,GAAG0B,UAAJ,CAAhB,CAA1C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport {configureStore} from '@reduxjs/toolkit'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {productListReducer,productDetailsReducer} from './reducers/productReducers'\nimport {cartReducer} from './reducers/cartReducers'\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer} from './reducers/userReducers'\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n        JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n        JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialSate = {\n    cart: {cartItems: cartItemsFromStorage},\n    userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialSate, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}