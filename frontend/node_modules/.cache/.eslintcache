[{"/Users/kevingarcia/Desktop/ecommerce/frontend/src/index.js":"1","/Users/kevingarcia/Desktop/ecommerce/frontend/src/App.js":"2","/Users/kevingarcia/Desktop/ecommerce/frontend/src/reportWebVitals.js":"3","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Header.js":"4","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Footer.js":"5","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/HomeScreen.js":"6","/Users/kevingarcia/Desktop/ecommerce/frontend/src/products.js":"7","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Product.js":"8","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Rating.js":"9","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/ProductScreen.js":"10","/Users/kevingarcia/Desktop/ecommerce/frontend/src/store.js":"11","/Users/kevingarcia/Desktop/ecommerce/frontend/src/reducers/productReducers.js":"12","/Users/kevingarcia/Desktop/ecommerce/frontend/src/constants/productConstants.js":"13","/Users/kevingarcia/Desktop/ecommerce/frontend/src/actions/productActions.js":"14","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Loader.js":"15","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Message.js":"16","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/CartScreen.js":"17","/Users/kevingarcia/Desktop/ecommerce/frontend/src/reducers/cartReducers.js":"18","/Users/kevingarcia/Desktop/ecommerce/frontend/src/constants/cartConstants.js":"19","/Users/kevingarcia/Desktop/ecommerce/frontend/src/actions/cartActions.js":"20","/Users/kevingarcia/Desktop/ecommerce/frontend/src/reducers/userReducers.js":"21","/Users/kevingarcia/Desktop/ecommerce/frontend/src/constants/userConstants.js":"22","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/LoginScreen.js":"23","/Users/kevingarcia/Desktop/ecommerce/frontend/src/actions/userActions.js":"24","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/FormContainer.js":"25","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/RegisterScreen.js":"26","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/ProfileScreen.js":"27","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/ShippingScreen.js":"28","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/CheckoutSteps.js":"29","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/PaymentScreen.js":"30","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/PlaceOrderScreen.js":"31","/Users/kevingarcia/Desktop/ecommerce/frontend/src/constants/orderConstants.js":"32","/Users/kevingarcia/Desktop/ecommerce/frontend/src/actions/orderActions.js":"33","/Users/kevingarcia/Desktop/ecommerce/frontend/src/reducers/orderReducer.js":"34","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/OrderScreen.js":"35","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/UserListScreen.js":"36","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/UserEditScreen.js":"37","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/ProductListScreen.js":"38","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/OrderListScreen.js":"39","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/ProductEditScreen.js":"40","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/SearchBox.js":"41","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Paginate.js":"42","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/ProductCarousel.js":"43"},{"size":595,"mtime":1650524278401,"results":"44","hashOfConfig":"45"},{"size":2437,"mtime":1651535049680,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1646970387908,"results":"47","hashOfConfig":"45"},{"size":2495,"mtime":1651821011137,"results":"48","hashOfConfig":"45"},{"size":389,"mtime":1646983331738,"results":"49","hashOfConfig":"45"},{"size":1530,"mtime":1651820441534,"results":"50","hashOfConfig":"45"},{"size":1653,"mtime":1651130969786,"results":"51","hashOfConfig":"45"},{"size":925,"mtime":1647065321645,"results":"52","hashOfConfig":"45"},{"size":1523,"mtime":1647056783975,"results":"53","hashOfConfig":"45"},{"size":8089,"mtime":1651804106324,"results":"54","hashOfConfig":"45"},{"size":2414,"mtime":1651525437198,"results":"55","hashOfConfig":"45"},{"size":3991,"mtime":1651817625615,"results":"56","hashOfConfig":"45"},{"size":1497,"mtime":1651524646216,"results":"57","hashOfConfig":"45"},{"size":5942,"mtime":1651808225303,"results":"58","hashOfConfig":"45"},{"size":395,"mtime":1651024127120,"results":"59","hashOfConfig":"45"},{"size":211,"mtime":1651024411198,"results":"60","hashOfConfig":"45"},{"size":3779,"mtime":1651804467794,"results":"61","hashOfConfig":"45"},{"size":1467,"mtime":1651512865952,"results":"62","hashOfConfig":"45"},{"size":287,"mtime":1651476216191,"results":"63","hashOfConfig":"45"},{"size":1331,"mtime":1651476467780,"results":"64","hashOfConfig":"45"},{"size":3606,"mtime":1651524862788,"results":"65","hashOfConfig":"45"},{"size":1480,"mtime":1651524618486,"results":"66","hashOfConfig":"45"},{"size":2581,"mtime":1651804978138,"results":"67","hashOfConfig":"45"},{"size":7386,"mtime":1651527847186,"results":"68","hashOfConfig":"45"},{"size":352,"mtime":1651394227823,"results":"69","hashOfConfig":"45"},{"size":3524,"mtime":1651460964629,"results":"70","hashOfConfig":"45"},{"size":5420,"mtime":1651524466972,"results":"71","hashOfConfig":"45"},{"size":2755,"mtime":1651565461583,"results":"72","hashOfConfig":"45"},{"size":1434,"mtime":1651472972176,"results":"73","hashOfConfig":"45"},{"size":1876,"mtime":1651476656877,"results":"74","hashOfConfig":"45"},{"size":5219,"mtime":1651506073593,"results":"75","hashOfConfig":"45"},{"size":1239,"mtime":1651477291964,"results":"76","hashOfConfig":"45"},{"size":6009,"mtime":1651478084545,"results":"77","hashOfConfig":"45"},{"size":4079,"mtime":1651512511403,"results":"78","hashOfConfig":"45"},{"size":7339,"mtime":1651521019760,"results":"79","hashOfConfig":"45"},{"size":2859,"mtime":1651531707568,"results":"80","hashOfConfig":"45"},{"size":3952,"mtime":1651531121319,"results":"81","hashOfConfig":"45"},{"size":5126,"mtime":1651819797666,"results":"82","hashOfConfig":"45"},{"size":2639,"mtime":1651804976659,"results":"83","hashOfConfig":"45"},{"size":6072,"mtime":1651545479976,"results":"84","hashOfConfig":"45"},{"size":1000,"mtime":1651817825949,"results":"85","hashOfConfig":"45"},{"size":858,"mtime":1651818180964,"results":"86","hashOfConfig":"45"},{"size":1418,"mtime":1651820327278,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"1222h6u",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"91"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"91"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"91"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"91"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"91"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"91"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"91"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"91"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"91"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"91"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"108"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevingarcia/Desktop/ecommerce/frontend/src/index.js",[],[],["235","236"],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/App.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/reportWebVitals.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Header.js",["237"],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Footer.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/HomeScreen.js",["238","239"],[],"import React, {useState, useEffect} from \"react\";\nimport {useDispatch, useSelector} from 'react-redux'\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport {listProducts} from '../actions/productActions'\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\n\n//home screen element\nfunction HomeScreen() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const productList = useSelector((state) => state.productList);\n  const { error, loading, products, page, pages } = productList;\n\n  let keyword = location.search;\n\n  console.log(keyword);\n  //use effect\n  useEffect(() => {\n    dispatch(listProducts(keyword));\n  }, [dispatch, keyword]);\n\n  //actual render\n  return (\n    <div>\n      {!keyword && <ProductCarousel />}\n      <h1>Latest Fashion</h1>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : error ? (\n        <Message varient=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate page={page} pages={pages} keyword={keyword} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default HomeScreen;\n",["240","241"],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/products.js",[],[],["242","243"],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Product.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Rating.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/ProductScreen.js",["244","245","246"],[],"import React, {useState, useEffect}from 'react'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { Link, useParams,useNavigate, createSearchParams } from 'react-router-dom'\nimport{ Row, Col, Image, ListGroup, Button, Card, ListGroupItem, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport {listProductDetails, createProductReview} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\n\n//Product Details Screen element\nfunction ProductScreen({match}) {\n\n  //react hooks for this element\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const productId = useParams();\n  \n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n  \n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector(state => state.productReviewCreate)\n  const {\n      loading: loadingProductReview,\n      error: errorProductReview,\n      success: successProductReview,\n  } = productReviewCreate\n  \n\n  let navigate = useNavigate();\n  const params = { qty: qty };\n\n  //use effect \n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n\n    dispatch(listProductDetails(productId.id));\n  }, [dispatch, match, successProductReview]);\n\n  //add to cart handler \n  const addToCartHandler = () => {\n    navigate({\n      pathname: `/cart/${productId.id}`,\n      search: `?${createSearchParams(params)}`\n    })\n  }\n\n  // submit handler\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(productId.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n\n  //actual page renders\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                    color={\"#f8e825\"}\n                  />\n                </ListGroup.Item>\n\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col xs=\"auto\" className=\"my-1\">\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      disabled={product.countInStock == 0}\n                      type=\"button\"\n                    >\n                      Add to Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <h4>Reviews</h4>\n              {product.reviews.length === 0 && (\n                <Message variant=\"info\">No Reviews</Message>\n              )}\n\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} color=\"#f8e825\" />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n\n                <ListGroup.Item>\n                  <h4>Write a review</h4>\n\n                  {loadingProductReview && <Loader />}\n                  {successProductReview && (\n                    <Message variant=\"success\">Review Submitted</Message>\n                  )}\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"5\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n\n                      <Button\n                        disabled={loadingProductReview}\n                        type=\"submit\"\n                        variant=\"primary\"\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message variant=\"info\">\n                      Please <Link to=\"/login\">login</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProductScreen","/Users/kevingarcia/Desktop/ecommerce/frontend/src/store.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/reducers/productReducers.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/constants/productConstants.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/actions/productActions.js",["247"],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Loader.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Message.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/CartScreen.js",["248","249"],[],"import React, { useEffect } from 'react'\nimport {Link, useLocation, useParams, useNavigate} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Row, Col, ListGroup, Image, Form, Button, Card, ListGroupItem} from 'react-bootstrap'\nimport Message from '../components/Message'\nimport {addtoCart, removeFromCart} from '../actions/cartActions'\n \n//cart screen element \nfunction CartScreen() {\n\n  //react hooks\n  const productId = useParams();\n  const location = useLocation();\n  const qty = location.state ? Number(location.state) : 1;//location state needs to return number\n  const dispatch = useDispatch();\n  const history = useNavigate()\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n  \n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  //use effect\n  useEffect(() => {\n    if (productId.id) {\n      dispatch(addtoCart(productId.id, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  //remove from cart handler\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  };\n\n  //checkout handler\n  const checkoutHandler = () => {\n      history('/shipping')\n  }\n\n  //actual render \n  return (\n    <Row>\n      <Col md=\"8\">\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message variant=\"info\">\n            Your Cart is empty<Link to=\"/\"> Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={3}>\n                    <Form.Control\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(addtoCart(item.product, Number(e.target.value)))\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={1}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md=\"4\">\n          <Card>\n              <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                      <h2>Subtotal ({cartItems.reduce((acc, item) =>acc + item.qty, 0)}) items</h2>\n                      ${cartItems.reduce((acc, item) =>acc + item.qty * item.price, 0).toFixed(2)}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                      <Button\n                      type='button'\n                      className='btn-block'\n                      disabled={cartItems.length ===0}\n                      onClick={checkoutHandler}\n                      >\n                          Proceed To Checkout\n\n                      </Button>\n                  </ListGroup.Item>\n\n              </ListGroup>\n          </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CartScreen;","/Users/kevingarcia/Desktop/ecommerce/frontend/src/reducers/cartReducers.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/constants/cartConstants.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/actions/cartActions.js",["250"],[],"import axios from 'axios'\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n    CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const addtoCart = (id, qty) => async(dispatch, getState) => {\n\n    const {data} = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) =>{\n\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n\n\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\n}\n\nexport const saveShippingAddress = (data) => (dispatch) =>{\n\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","/Users/kevingarcia/Desktop/ecommerce/frontend/src/reducers/userReducers.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/constants/userConstants.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/LoginScreen.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/actions/userActions.js",["251"],[],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\n\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try{\n        dispatch({\n            type:USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/login/',\n            {'username':email, 'password': password},\n            config\n            )\n        \n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch (error){\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) =>{\n    localStorage.removeItem('userInfo')\n    dispatch({type: USER_LOGOUT})\n    dispatch({type: USER_DETAILS_RESET})\n    dispatch({type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try{\n        dispatch({\n            type:USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/register/',\n            {'name':name,'email':email, 'password': password},\n            config\n            )\n        \n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload:data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch (error){\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try{\n        dispatch({\n            type:USER_DETAILS_REQUEST\n        })\n\n        const{\n            userLogin: {userInfo},\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/users/${id}`,\n            config\n            )\n        \n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload:data\n        })\n\n\n    }catch (error){\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload:error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try{\n        dispatch({\n            type:USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const{\n            userLogin: {userInfo},\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n            )\n        \n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload:data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n\n    }catch (error){\n        console.log('here')\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload:error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/FormContainer.js",["252"],[],"import React, { Children } from 'react'\nimport {Container, Row, Col} from 'react-bootstrap'\n\nfunction FormContainer({children}) {\n  return (\n    <Container>\n        <Row className='justify-content-md-center'>\n            <Col xs={12} md={6}>\n            {children}\n            </Col>\n\n        </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/RegisterScreen.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/ProfileScreen.js",["253","254","255"],[],"import React, {useState, useEffect} from 'react'\nimport {Link, useLocation, useNavigate} from 'react-router-dom'\nimport {Form, Button, Row, Col, Table} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {getUserDetails, updateUserProfile} from '../actions/userActions'\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\n\nfunction ProfileScreen() {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const history = useNavigate()\n    \n\n    const userDetails = useSelector(state => state.userDetails)\n    const {error, loading, user} = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const {success} = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n          history(\"/login\");\n        } else {\n          if (!user || !user.name || success) {\n            dispatch({ type: USER_UPDATE_PROFILE_RESET });\n            dispatch(getUserDetails(\"profile\"));\n            dispatch(listMyOrders());\n          } else {\n            setName(user.name);\n            setEmail(user.email);\n          }\n        }\n    }, [dispatch, history, userInfo, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword){\n            setMessage('Passwords do not match')\n        }else{\n            dispatch(updateUserProfile({\n              'id': user._id,\n              'name': name,\n              'email': email,\n              'password': password \n            }))\n            setMessage('')\n        }\n        \n    }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"passwordConfirm\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Date</th>\n                <th>Total</th>\n                <th>Paid</th>\n                <th>Delivered</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>${order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\">Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nexport default ProfileScreen","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/ShippingScreen.js",["256","257","258","259","260","261"],[],"import React, {useState, useEffect} from 'react'\nimport {Link, useLocation, useNavigate} from 'react-router-dom'\nimport {Form, Button, Row, Col} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport {register} from '../actions/userActions'\nimport {saveShippingAddress} from '../actions/cartActions'\n\nfunction ShippingScreen() {\n\n  const cart = useSelector(state => state.cart)\n  const {shippingAddress} = cart\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useNavigate();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({address, city, postalCode, country}))\n    history('/payment')\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 step4/>\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            value={address ? address : \"\"}\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter City\"\n            value={city ? city : \"\"}\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postalcode\">\n          <Form.Label>PostalCode</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter PostalCode\"\n            value={postalCode ? postalCode : \"\"}\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            value={country ? country : \"\"}\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default ShippingScreen;","/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/CheckoutSteps.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/PaymentScreen.js",["262","263","264","265","266","267"],[],"import React, {useState, useEffect} from 'react'\nimport {Link, useLocation, useNavigate} from 'react-router-dom'\nimport {Form, Button, Row, Col} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport {register} from '../actions/userActions'\nimport {saveShippingAddress} from '../actions/cartActions'\nimport {savePaymentMethod} from '../actions/cartActions'\n\nfunction PaymentScreen() {\n\n    const cart = useSelector(state => state.cart)\n    const {shippingAddress} = cart\n    const history = useNavigate();\n    const dispatch = useDispatch();\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address){\n        history('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history('/placeorder')\n    }\n\n  return (\n    <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n  )\n}\n\nexport default PaymentScreen","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/PlaceOrderScreen.js",["268","269"],[],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen() {\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, error, success } = orderCreate;\n  const cart = useSelector((state) => state.cart);\n\n  cart.itemsPrice = cart.cartItems\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\n    .toFixed(2);\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\n  cart.taxPrice = Number(0.01 * cart.itemsPrice).toFixed(2);\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  useEffect(() =>{\n    if (!cart.paymentMethod) {\n      history('/payment');\n    }\n  })\n  \n\n  useEffect(() => {\n    if (success) {\n      history(`/order/${order._id}`);\n      dispatch({ type: ORDER_CREATE_RESET });\n    }\n  }, [success, history]);\n\n  const placeOrder = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n\n              <p>\n                <strong>Shipping: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\n                {\"  \"}\n                {cart.shippingAddress.postalCode},{\"  \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {cart.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message variant=\"info\">Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items:</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping:</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax:</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrder}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default PlaceOrderScreen","/Users/kevingarcia/Desktop/ecommerce/frontend/src/constants/orderConstants.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/actions/orderActions.js",["270","271","272"],[],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/Users/kevingarcia/Desktop/ecommerce/frontend/src/reducers/orderReducer.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/OrderScreen.js",["273"],[],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link, useNavigate,useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {PayPalButton} from 'react-paypal-button-v2'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen() {\n  const history = useNavigate();\n  const orderId = useParams();\n  const dispatch = useDispatch();\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, error, loading } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  //Ac1o4k_BrwizlOyR8LSSdB35iCyww_vC8bLxCMkWwYNaYKtJv6m-QQ8mhHcBLaWtNxGMLxXkHfL5on_i\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\n      .toFixed(2);\n  }\n\n  const addPayPalScript = () => {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src =\n      \"https://www.paypal.com/sdk/js?client-id=Ac1o4k_BrwizlOyR8LSSdB35iCyww_vC8bLxCMkWwYNaYKtJv6m-QQ8mhHcBLaWtNxGMLxXkHfL5on_i\";\n    script.async = true;\n    script.onload = () => {\n      setSdkReady(true);\n    };\n    document.body.appendChild(script);\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history(\"/login\");\n    }\n\n    if (\n      !order ||\n      successPay ||\n      order._id !== Number(orderId.id) ||\n      successDeliver\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n\n      dispatch(getOrderDetails(orderId.id));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, order, orderId.id]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId.id, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <div>\n      <h1>Order: {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Shipping: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}\n                {\"  \"}\n                {order.shippingAddress.postalCode},{\"  \"}\n                {order.shippingAddress.country}\n              </p>\n\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"warning\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message variant=\"info\">Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items:</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping:</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax:</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n            {loadingDeliver && <Loader />}\n            {userInfo &&\n              userInfo.isAdmin &&\n              order.isPaid &&\n              !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                    type=\"button\"\n                    className=\"btn btn-block\"\n                    onClick={deliverHandler}\n                  >\n                    Mark As Delivered\n                  </Button>\n                </ListGroup.Item>\n              )}\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default OrderScreen;","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/UserListScreen.js",["274","275"],[],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {useLocation, useNavigate} from 'react-router-dom'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen() {\n\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const history = useNavigate()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n  return (\n    <div>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n}\n\nexport default UserListScreen","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/UserEditScreen.js",["276"],[],"import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen() {\n\n    const userId = useParams()\n    const history = useNavigate()\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId.id)) {\n                dispatch(getUserDetails(userId.id))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId.id, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/ProductListScreen.js",["277","278"],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/OrderListScreen.js",["279"],[],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {useNavigate} from 'react-router-dom'\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listOrders } from \"../actions/orderActions\";\n\nfunction OrderListScreen() {\n\n  //react hooks\n  const dispatch = useDispatch();\n  const history = useNavigate()\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  //use effect\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n  //actual element render\n  return (\n    <div>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>Total</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n}\n\nexport default OrderListScreen;\n","/Users/kevingarcia/Desktop/ecommerce/frontend/src/screens/ProductEditScreen.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/SearchBox.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/Paginate.js",[],[],"/Users/kevingarcia/Desktop/ecommerce/frontend/src/components/ProductCarousel.js",[],[],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":3,"column":34,"nodeType":"286","messageId":"287","endLine":3,"endColumn":37},{"ruleId":"284","severity":1,"message":"288","line":1,"column":16,"nodeType":"286","messageId":"287","endLine":1,"endColumn":24},{"ruleId":"284","severity":1,"message":"289","line":10,"column":23,"nodeType":"286","messageId":"287","endLine":10,"endColumn":34},{"ruleId":"280","replacedBy":"290"},{"ruleId":"282","replacedBy":"291"},{"ruleId":"280","replacedBy":"292"},{"ruleId":"282","replacedBy":"293"},{"ruleId":"284","severity":1,"message":"294","line":4,"column":51,"nodeType":"286","messageId":"287","endLine":4,"endColumn":64},{"ruleId":"295","severity":1,"message":"296","line":48,"column":6,"nodeType":"297","endLine":48,"endColumn":45,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":155,"column":54,"nodeType":"301","messageId":"302","endLine":155,"endColumn":56},{"ruleId":"284","severity":1,"message":"303","line":122,"column":17,"nodeType":"286","messageId":"287","endLine":122,"endColumn":21},{"ruleId":"284","severity":1,"message":"294","line":4,"column":57,"nodeType":"286","messageId":"287","endLine":4,"endColumn":70},{"ruleId":"284","severity":1,"message":"304","line":17,"column":9,"nodeType":"286","messageId":"287","endLine":17,"endColumn":17},{"ruleId":"284","severity":1,"message":"305","line":7,"column":5,"nodeType":"286","messageId":"287","endLine":7,"endColumn":21},{"ruleId":"284","severity":1,"message":"306","line":21,"column":5,"nodeType":"286","messageId":"287","endLine":21,"endColumn":30},{"ruleId":"284","severity":1,"message":"307","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"308","line":2,"column":9,"nodeType":"286","messageId":"287","endLine":2,"endColumn":13},{"ruleId":"284","severity":1,"message":"309","line":22,"column":11,"nodeType":"286","messageId":"287","endLine":22,"endColumn":19},{"ruleId":"295","severity":1,"message":"310","line":52,"column":8,"nodeType":"297","endLine":52,"endColumn":43,"suggestions":"311"},{"ruleId":"284","severity":1,"message":"312","line":1,"column":26,"nodeType":"286","messageId":"287","endLine":1,"endColumn":35},{"ruleId":"284","severity":1,"message":"308","line":2,"column":9,"nodeType":"286","messageId":"287","endLine":2,"endColumn":13},{"ruleId":"284","severity":1,"message":"285","line":3,"column":23,"nodeType":"286","messageId":"287","endLine":3,"endColumn":26},{"ruleId":"284","severity":1,"message":"313","line":3,"column":28,"nodeType":"286","messageId":"287","endLine":3,"endColumn":31},{"ruleId":"284","severity":1,"message":"314","line":7,"column":9,"nodeType":"286","messageId":"287","endLine":7,"endColumn":17},{"ruleId":"284","severity":1,"message":"309","line":21,"column":9,"nodeType":"286","messageId":"287","endLine":21,"endColumn":17},{"ruleId":"284","severity":1,"message":"312","line":1,"column":26,"nodeType":"286","messageId":"287","endLine":1,"endColumn":35},{"ruleId":"284","severity":1,"message":"308","line":2,"column":9,"nodeType":"286","messageId":"287","endLine":2,"endColumn":13},{"ruleId":"284","severity":1,"message":"315","line":2,"column":15,"nodeType":"286","messageId":"287","endLine":2,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":3,"column":23,"nodeType":"286","messageId":"287","endLine":3,"endColumn":26},{"ruleId":"284","severity":1,"message":"314","line":7,"column":9,"nodeType":"286","messageId":"287","endLine":7,"endColumn":17},{"ruleId":"284","severity":1,"message":"316","line":8,"column":9,"nodeType":"286","messageId":"287","endLine":8,"endColumn":28},{"ruleId":"284","severity":1,"message":"288","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},{"ruleId":"295","severity":1,"message":"317","line":41,"column":6,"nodeType":"297","endLine":41,"endColumn":24,"suggestions":"318"},{"ruleId":"284","severity":1,"message":"319","line":14,"column":5,"nodeType":"286","messageId":"287","endLine":14,"endColumn":20},{"ruleId":"284","severity":1,"message":"320","line":19,"column":5,"nodeType":"286","messageId":"287","endLine":19,"endColumn":24},{"ruleId":"284","severity":1,"message":"321","line":28,"column":5,"nodeType":"286","messageId":"287","endLine":28,"endColumn":24},{"ruleId":"295","severity":1,"message":"322","line":72,"column":6,"nodeType":"297","endLine":72,"endColumn":35,"suggestions":"323"},{"ruleId":"284","severity":1,"message":"288","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"309","line":13,"column":11,"nodeType":"286","messageId":"287","endLine":13,"endColumn":19},{"ruleId":"295","severity":1,"message":"324","line":44,"column":8,"nodeType":"297","endLine":44,"endColumn":49,"suggestions":"325"},{"ruleId":"284","severity":1,"message":"288","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"326","line":17,"column":11,"nodeType":"286","messageId":"287","endLine":17,"endColumn":20},{"ruleId":"284","severity":1,"message":"288","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},"no-native-reassign",["327"],"no-negated-in-lhs",["328"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useNavigate' is defined but never used.",["327"],["328"],["327"],["328"],"'ListGroupItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productId.id'. Either include it or remove the dependency array.","ArrayExpression",["329"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'redirect' is assigned a value but never used.","'CART_CLEAR_ITEMS' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'Children' is defined but never used.","'Link' is defined but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.",["330"],"'useEffect' is defined but never used.","'Col' is defined but never used.","'register' is defined but never used.","'useLocation' is defined but never used.","'saveShippingAddress' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["331"],"'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'successDeliver', 'successPay', and 'userInfo'. Either include them or remove the dependency array.",["332"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["333"],"'productId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},"Update the dependencies array to be: [dispatch, match, productId.id, successProductReview]",{"range":"344","text":"345"},"Update the dependencies array to be: [dispatch, history, userInfo, user, success]",{"range":"346","text":"347"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"348","text":"349"},"Update the dependencies array to be: [dispatch, history, order, orderId.id, successDeliver, successPay, userInfo]",{"range":"350","text":"351"},"Update the dependencies array to be: [user, userId.id, successUpdate, history, dispatch]",{"range":"352","text":"353"},[1598,1637],"[dispatch, match, productId.id, successProductReview]",[1821,1856],"[dispatch, history, userInfo, user, success]",[1311,1329],"[success, history, order._id, dispatch]",[2321,2350],"[dispatch, history, order, orderId.id, successDeliver, successPay, userInfo]",[1469,1510],"[user, userId.id, successUpdate, history, dispatch]"]